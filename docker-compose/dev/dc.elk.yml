version: '3'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
    container_name: es01
    restart: unless-stopped
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic
  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
    container_name: es02
    restart: unless-stopped
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    networks:
      - elastic
  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
    container_name: es03
    restart: unless-stopped
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
    networks:
      - elastic
  logstash:
    image: crimsoncorelabs/logstashrest
    container_name: logstash_rest    
    ports:
     - 5044:5044
     - 5045:5045
     - 5046:5046
    restart: unless-stopped
    volumes:
    - /opt/threathunt/logstash/pipeline/:/usr/share/logstash/pipeline/
    - /opt/threathunt/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
    - /opt/threathunt/logstash/patterns:/usr/share/logstash/patterns
    - /opt/threathunt/logstash/pki/:/usr/share/logstash/pki
    networks:
      - elastic
  kibana:
    image: 'docker.elastic.co/kibana/kibana:7.4.2'
    container_name: kibana
    restart: unless-stopped
    labels:
      - "traefik.http.routers.kibana.rule=HostRegexp(`{subdomain:kibana.*}.{subdomain:.*}`)"
      - "traefik.enable=true"
      - "traefik.http.routers.kibana.entrypoints=web"
      - "traefik.http.routers.kibana.middlewares=th-auth"
    volumes:
      - /opt/threathunt/kibana/config/:/usr/share/kibana/config/
    ports:
      - '5601:5601'
    networks:
      - elastic
  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: unless-stopped
    labels:
      - "traefik.http.routers.portainer.rule=HostRegexp(`{subdomain:portainer-elk.*}.{subdomain:.*}`)"
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.entrypoints=web"
    volumes:
    - /opt/threathunt/portainer/data:/data
    - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9000:9000
    networks:
      - elastic      
  domainstats:
    image: securityonionsolutions/so-domainstats:latest
    container_name: domainstats
    restart: unless-stopped
    ports:
      - 20000:20000
    volumes:
      - /opt/threathunt/domain_stats/top-1m.csv:/opt/domain_stats/top-1m.csv
    networks:
      - elastic
  freqserver:
    image: securityonionsolutions/so-freqserver
    container_name: freqserver
    restart: unless-stopped
    ports:
      - 10004:10004
    networks:
      - elastic
  cerebro:
    image: lmenezes/cerebro:latest
    container_name: cerebro
    restart: unless-stopped
    labels:
      - "traefik.http.routers.cerebro.rule=HostRegexp(`{subdomain:cerebro.*}.{subdomain:.*}`)"
      - "traefik.enable=true"
      - "traefik.http.routers.cerebro.entrypoints=web"
      - "traefik.http.routers.cerebro.middlewares=th-auth"
    ports:
      - 9001:9000
    networks:
      - elastic
  traefik:
    image: traefik:latest
    container_name: traefik
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--providers.file.filename=dynamic_conf.toml"
      - "--providers.file.directory=/"
      - "--providers.file.watch=true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.th-auth.basicauth.users=thadmin:$$apr1$$2RnW3J50$$bjzbmnFizHfUNlegGHFAN0"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /opt/threathunt/traefik/dynamic_conf.toml:/dynamic_conf.toml
    restart: unless-stopped
    networks:
      - elastic
  mdbook:
    image: crimsoncorelabs/mdbook
    container_name: mdbook
    restart: unless-stopped
    volumes:
    - /opt/wiki:/opt/wiki
    ports:
      - 3000:3000
      - 3001:3001 
    labels:
      - "traefik.http.routers.mdbook.rule=HostRegexp(`{subdomain:mdbook.*}.{subdomain:.*}`)"
      - "traefik.enable=true"
      - "traefik.http.routers.mdbook.entrypoints=web"
      - "traefik.http.routers.mdbook.middlewares=th-auth"
    networks:
      - elastic
  elastalert:
    image: crimsoncorelabs/elastalert
    container_name: elastalert
    restart: unless-stopped
    volumes:
    - /opt/threathunt/elastalert/config:/opt/elastalert/config
    - /opt/threathunt/elastalert/rules:/opt/elastalert/rules
    - /opt/threathunt/elastalert/log:/opt/elastalert/log
    networks:
      - elastic
volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local

networks:
  elastic:
    driver: bridge

